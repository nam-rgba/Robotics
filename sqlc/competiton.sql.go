// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: competiton.sql

package sqlc

import (
	"context"
	"database/sql"

	"github.com/lib/pq"
)

const createCompetition = `-- name: CreateCompetition :one
INSERT INTO competition 
(name, decription ) 
VALUES ($1, $2) RETURNING com_id, name, decription, rules, agelimit, images, status, stime, etime, registerstart, registerend, location, venue, address, city, max_team_size, participant_fee, first_prize, second_prize, third_prize, org_id
`

type CreateCompetitionParams struct {
	Name       sql.NullString `json:"name"`
	Decription sql.NullString `json:"decription"`
}

func (q *Queries) CreateCompetition(ctx context.Context, arg CreateCompetitionParams) (Competition, error) {
	row := q.db.QueryRowContext(ctx, createCompetition, arg.Name, arg.Decription)
	var i Competition
	err := row.Scan(
		&i.ComID,
		&i.Name,
		&i.Decription,
		&i.Rules,
		&i.Agelimit,
		pq.Array(&i.Images),
		&i.Status,
		&i.Stime,
		&i.Etime,
		&i.Registerstart,
		&i.Registerend,
		&i.Location,
		&i.Venue,
		&i.Address,
		&i.City,
		&i.MaxTeamSize,
		&i.ParticipantFee,
		&i.FirstPrize,
		&i.SecondPrize,
		&i.ThirdPrize,
		&i.OrgID,
	)
	return i, err
}
